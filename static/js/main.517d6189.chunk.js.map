{"version":3,"sources":["images/defcon.jpg","images/headshot.jpg","components/TopNav.js","components/Bryce.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","TopNav","props","handleItemClick","e","name","setState","activeItem","handleIconClick","window","location","href","state","path","pathname","startsWith","this","style","paddingTop","width","Menu","pointing","secondary","vertical","fontSize","Item","as","Link","to","active","onClick","bind","color","padding","Icon","size","cursor","text","display","Popup","on","trigger","value","content","basic","Component","Bryce","link","require","Container","alignItems","height","bryce","header_styles","flexGrow","Routes","Grid","stackable","Column","Header","Image","rounded","src","stretched","overflowX","overflowY","exact","component","App","className","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.517d6189.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/defcon.91c87ebe.jpg\";","module.exports = __webpack_public_path__ + \"static/media/headshot.b8bc67e8.jpg\";","import React, { Component } from 'react'\nimport { Menu, Icon, Button, Popup } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\n\n\n\nexport default class TopNav extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeItem: \"home\"\n    }\n  };\n\n  componentDidMount(){\n    let path = window.location.pathname\n    var activeItem = \"home\" //assume home to start\n    if (path.startsWith(\"/blog\")) {\n      activeItem = \"blog\"\n    }\n    else if (path.startsWith(\"/projects\")) {\n      activeItem = \"projects\"\n    }\n    else if (path.startsWith(\"/experience\")) {\n      activeItem = \"experience\"\n    }\n    else if (path.startsWith(\"/plants\")) {\n      activeItem = \"plants\"\n    }\n    this.setState({\n      activeItem: activeItem\n    })\n  }\n\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name })\n\n  handleIconClick = (e, { name }) => {\n    if (name === \"linkedin\") {\n      window.location.href = \"https://www.linkedin.com/in/bryce-pedroza\"\n    }\n    else if (name === \"instagram\") {\n      window.location.href = \"https://www.instagram.com/brycepedroza/\"\n    }\n    // else if (name === \"mail\") {\n    //   console.log('here')\n    //   document.execCommand('copy');\n    //   e.target.focus()\n    //   // This is just personal preference.\n    //   // I prefer to not show the the whole text area selected.\n    //   console.log(e.target.focus())\n    // }\n  }\n\n\n  render() {\n    const { activeItem } = this.state\n\n    return (\n        <div style={{paddingTop: 10, width: \"100%\"}} >\n          <Menu pointing secondary vertical style={{width: \"100%\", fontSize: \"1.5em\"}} >\n            <Menu.Item\n              name='home'\n              as={Link} to=\"/\"\n              active={this.state.activeItem === 'home'}\n              onClick={this.handleItemClick.bind(this)}\n              style={{color: 'white', padding: \"10px 0px\"}}/>\n            <Menu.Item\n              name='experience'\n              as={Link} to=\"/experience\"\n              active={this.state.activeItem === 'experience'}\n              onClick={this.handleItemClick.bind(this)}\n              style={{color: 'white', padding: \"10px 0px\"}}/>\n            <Menu.Item\n              name='projects'\n              as={Link} to=\"/projects\"\n              active={this.state.activeItem === 'projects'}\n              onClick={this.handleItemClick.bind(this)}\n              style={{color: 'white', padding: \"10px 0px\"}}/>\n            <Menu.Item\n              name='blog'\n              as={Link} to=\"/blog\"\n              active={this.state.activeItem === 'blog'}\n              onClick={this.handleItemClick.bind(this)}\n              style={{color: 'white', padding: \"10px 0px\"}}/>\n          </Menu>\n          <Icon name='instagram'\n            size=\"big\"\n            style={{ cursor: 'pointer' }}\n            onClick={this.handleIconClick.bind(this)}/>\n          <Icon name='linkedin'\n            size=\"big\"\n            style={{ cursor: 'pointer' }}\n            onClick={this.handleIconClick.bind(this)}/>\n          <CopyToClipboard text=\"brycepedroza@gmail.com\">\n          <div style={{display: \"inline\", cursor: \"pointer\"}}>\n          <Popup\n            on='click'\n            trigger={<Icon name='mail' size=\"big\" value = \"brycepedroza@gmail.com\"/>}\n            content=\"Email copied!\"\n            value = \"brycepedroza@gmail.com\"\n            basic\n          />\n          </div>\n          </CopyToClipboard>\n\n\n        </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { Container, Image } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\n\nconst starbucks = \"Starbucks\".link(\"https://starbucks.com\")\nconst defcon = require('../images/defcon.jpg')\n\nconst professionalInfo = \" Hey, I'm Bryce Pedroza. I'm a Graduate student at Arizona State \\\n                           University studying Computer Science. I'm currently \\\n                           conducting my thesis in the area of Cybersecurity with Big Data. \\\n                           Along with this, I'm an information security intern at \" + starbucks + \" where \\\n                           where I assist in vulnerability management for the organization. \\\n                           In my spare time, I like to work on personal projects (like this site!). \\\n                           Feel free to take a look at some of my projects over to the side. \\\n                           \"\n\nconst header_styles = {\n  color: \"white\",\n  fontSize: \"2em\",\n  flexGrow: 0,\n}\n\nexport default class Bryce extends Component {\n\n  render() {\n    return (\n      <Container text>\n      <div style={{display: \"flex\", alignItems: \"center\", height: \"100%\"}}>\n        <p style={{fontSize: \"1.15em\"}}>\n          Hey, I'm Bryce Pedroza. I'm a Graduate student at Arizona State\n          University studying Computer Science. I'm currently\n          conducting my thesis in the area of Big Data within Cybersecurity.\n          Along with this, I'm an information security intern at <a href=\"https://starbucks.com\"> Starbucks </a>\n          where I assist in vulnerability management and other security tasks for the organization.\n          Take a look at my experiences for more on Starbucks and my prior work experience!\n          <br/><br/>\n          In my spare time, I like to work on personal projects (like this site!).\n          I built with React.js and was a quick project to highlight my front end skills.\n          Check out my other projects over to the side to see some of the other technologies I've used.\n          <br/><br/>\n          When I am not coding, I'm hiking, building desks, making amateur YouTube content,\n          attending <a href=\"https://www.defcon.org/\"> DEFCON </a>,\n          playing <a href=\"https://en.wikipedia.org/wiki/Codenames_(board_game)\"> Code Names, </a>\n          or taking care of my plants!\n         </p>\n       </div>\n\n      </Container>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { Grid, Image, Header} from 'semantic-ui-react'\nimport TopNav from './components/TopNav'\nimport Bryce from './components/Bryce'\n\nimport { Route, Switch, withRouter, Redirect } from \"react-router-dom\";\n\n\nconst bryce = require('./images/headshot.jpg')\nconst header_styles = {\n  color: \"white\",\n  fontSize: \"2em\",\n  flexGrow: 0,\n}\n\nexport default class Routes extends Component {\n\n\n  render() {\n\n    return (\n      <Grid stackable>\n        <Grid.Column width={4}>\n          <Header size=\"huge\" style={header_styles}> Bryce Pedroza </Header>\n          <Image rounded src={bryce}/>\n          <TopNav/>\n        </Grid.Column>\n\n        <Grid.Column stretched width={12} style={{overflowX: \"auto\", overflowY: \"none\"}}>\n          <Switch>\n            <Route exact path=\"/\" component={ () =>\n              <Bryce/>\n            }/>\n            <Route exact path=\"/projects\" component={ () =>\n              <p> Projects </p>\n            }/>\n            <Route exact path=\"/experience\" component={ () =>\n              <p> Experience </p>\n            }/>\n            <Route exact path=\"/blog\" component={ () =>\n              <h1> Blog posts coming soon </h1>\n            }/>\n            </Switch>\n        </Grid.Column>\n      </Grid>\n    )\n  }\n}\n","import React from 'react';\nimport TopNav from './components/TopNav'\nimport Routes from './routes'\nimport 'semantic-ui-css/semantic.min.css'\nimport { HashRouter as Router } from 'react-router-dom';\n\n\nfunction App() {\n  return (\n    <div className=\"background\">\n    <div className=\"main\">\n      <Router>\n        <Routes/>\n      </Router>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}